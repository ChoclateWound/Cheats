Dockers

# Docker images
docker images

# Running containers
docker container ls

# All containers
docker container ls -a

# Pull and run docker
docker container run --publish 80:80 nginx

# Run container and detach
docker container run --publish 80:80 --detach nginx

# Stop container
docker stop <ContainerName>

# Force and remove container
docker container rm -f <ContainerName>

# Reading logs of container
docker container logs <ContainerName>

# Processes running in container
docker container top <ContainerName>


# All commands availiable for containers
docker container --help


# Whats going on in container
## Process list in one container
docker container top

## Details of one container config
docker container inspect

## Stats of one container
docker container stats


# Getting a shell Inside Containers
## Start new container interactively
docker container run -it
docker container run -it --name proxy nginx bash

## Attach to running container
docker container exec -it ubuntu bash

# Attach of stopped container 
docker container start -ai ubuntu


# Networking

## Check open ports on containers
docker container port ubuntu

## IP Address of container
docker container inspect --format '{{ .NetworkSettings.IPAddress }}' ubuntu

## Shows network interfaces for dockers
docker network ls

## See hosts attached to these networks (shows all attached containers to this interface)
docker network inspect bridge 

## Create NEW network interface
docker network create NAME

## Connect new interface to docker (interfaceID containerid)
docker network connect 29912b65515d 7dd1378caf26


## Run container and attach to network
docker container run -d --net <networkName> --net-alias <NAME> <IMAGENAME>

### Class
docker container run -d -p 3306:3306 --name db -e MYSQL_RANDOM_ROOT_PASSWORD=yes mysql
